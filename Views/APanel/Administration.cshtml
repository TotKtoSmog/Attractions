@{
    ViewData["Title"] = "Администрирование";
}
@model IEnumerable<Attractions.Models.dboModels.Feedback>
<h5 class="display-6"> <b>@ViewData["name"]</b> добро пожаловать в панель администрирования</h5>

<div class="d-flex align-items-start">
    <div class="nav flex-column nav-tabs me-3" id="nav-tab" role="tablist" aria-orientation="vertical">
        <button class="nav-link active" id="v-pills-home-tab" data-bs-toggle="pill" data-bs-target="#v-pills-home" type="button" role="tab" aria-controls="v-pills-home" aria-selected="true">Отзывы пользователей</button>
    </div>
    <div class="tab-content" id="v-pills-tabContent">
        <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">
            <h5>Отзывы пользователей</h5>
            <table id="feedbackTable" class="table table table-hover border-primary">
                <label class="control-label">Фильтры</label>
                <div class="d-flex justify-content-evenly">

                    <form method="get" asp-action="Account" asp-controller="User">
                        <div>
                            <label class="control-label">Неподтвержденные отзывы</label>
                            <input type="checkbox" name="Status" />
                        </div>
                        <button type="submit">Применить</button>
                    </form>
                </div>
                <thead id="feedbackTable-Head">
                    <tr>
                        <th>
                            id
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('Id_User')">id Отправителя</a>
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('NameSender')">Отправитель</a>
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('fb_datatime')">Дата публикации</a>
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('FeedBackText')">Текст отзыва</a>
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('Ball')">Балла</a>
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('IsAccepted')">Статус</a>
                        </th>
                        <th>
                            <a href="#" onclick="sortTable('Id_Sight')">id Достопримечательности</a>
                        </th>
                        <th>
                            Подтверждение
                        </th>
                        <th>
                            Удаление
                        </th>
                    </tr>
                </thead>

                <tbody id="feedbackTable-Body">
                    @{
                        @foreach (var fb in Model)
                        {
                            <tr id="row-@fb.Id">
                                <td scope="row">@fb.Id</td>
                                <td scope="row">@(fb.Id_User == null ? "Не авторизован" : fb.Id_User)</td>
                                <td scope="row">@fb.NameSender</td>
                                <td scope="row">@fb.fb_datatime</td>
                                <td scope="row">@fb.FeedBackText</td>
                                <td scope="row">@fb.Ball</td>
                                <td scope="row">@fb.IsAccepted</td>
                                <td scope="row">@fb.Id_Sight</td>
                                <td scope="row">
                                    <button class="@(fb.IsAccepted? "btn btn-warning" : "btn btn-primary")" onclick="confirmReview(@fb.Id, this)">
                                        @(fb.IsAccepted ? "Снять подтверждение" : "Подтвердить")
                                </button></td>
                                <td scope="row"><button class="btn btn-danger" onclick="deleteReview(@fb.Id)">Удалить</button></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    let currentSortColumn = null;
    let currentSortOrder = 'ASC'; // ASC или DESC

    async function confirmReview(id, button) {
        const response = await fetch(`/APanel/ChangeAcceptedFeedBack/${id}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        });

        if (response.ok) {
            const data = await response.json();
            const isAccepted = data.isAccepted;

            if (button) {
                button.classList.toggle('btn-warning', isAccepted);
                button.classList.toggle('btn-primary', !isAccepted);
                button.textContent = isAccepted ? 'Снять подтверждение' : ' Подтвердить';

                const row = document.getElementById(`row-${id}`);
                const statusCell = row ? row.children[6] : null;
                if (statusCell) {
                    statusCell.textContent = isAccepted ? 'True' : 'False';
                }
            }

            alert('Комментарий обновлен!');
        } else {
            alert('Ошибка при обновлении комментария.');
        }
    }
    
    async function deleteReview(id) {
        const response = await fetch(`/APanel/DeleteFeedBack/${id}`, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' }
        });

        if (response.ok) {
            const row = document.getElementById(`row-${id}`);
            if (row) {
                row.remove();
            }
            alert('Комментарий удалён!');
        } else {
            alert('Ошибка при удалении комментария.');
        }
    }

    async function sortTable(column) {
        // Переключаем порядок сортировки
        if (currentSortColumn === column) {
            currentSortOrder = currentSortOrder === 'ASC' ? 'DESC' : 'ASC';
        } else {
            currentSortOrder = 'ASC';
        }
        currentSortColumn = column;

        // Отправляем запрос на сервер
        const response = await fetch(`/APanel/SortFeedBacks?column=${column}&order=${currentSortOrder}`, {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' }
        });

        if (response.ok) {
            const sortedRows = await response.json();
            const tableBody = document.getElementById('feedbackTable-Body');

            // Очищаем старое содержимое `tbody`
            tableBody.innerHTML = '';

            // Создаем новые строки на основе данных с сервера
            sortedRows.forEach(row => {
                const tr = document.createElement('tr');
                tr.id = `row-${row.id}`;
                tr.innerHTML = `
                    <td scope="row">${row.id}</td>
                    <td scope="row">${row.id_User ? row.id_User : "Не авторизован"}</td>
                    <td scope="row">${row.nameSender}</td>
                    <td scope="row">${row.fb_datatime}</td>
                    <td scope="row">${row.feedBackText}</td>
                    <td scope="row">${row.ball}</td>
                    <td scope="row">${row.isAccepted}</td>
                    <td scope="row">${row.id_Sight}</td>
                    <td scope="row">
                        <button class="${row.isAccepted ? "btn btn-warning" : "btn btn-primary"}" onclick="confirmReview(${row.id}, this)">
                            ${row.isAccepted ? "Снять подтверждение" : "Подтвердить"}
                        </button>
                    </td>
                    <td scope="row">
                        <button class="btn btn-danger" onclick="deleteReview(${row.id})">Удалить</button>
                    </td>
                `;
                tableBody.appendChild(tr);
            });
        } else {
            alert('Ошибка при сортировке');
        }
    }
</script>